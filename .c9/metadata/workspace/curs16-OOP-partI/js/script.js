{"filter":false,"title":"script.js","tooltip":"/curs16-OOP-partI/js/script.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":152,"column":1},"action":"remove","lines":["$(onHtmlLoaded);","","function onHtmlLoaded() {","    var articlesRootUrl = \"https://jsonplaceholder.typicode.com/postskhkjmjb\";","    ","    // $.get(articlesRootUrl, function(response) {","    //         displayArticle(response, articlesRootUrl);","    // });","    ","   // $.get(articlesRootUrl) ","   getArticlesFromApi(articlesRootUrl) // displayError does not work here","        // .then(function(response30) {","        //     return get10Articles(response30);","        // })","        // .catch(displayError)","        .then(get10Articles, displayError)","        .then(function(response) {","            console.log('2', response.length);  // 2 30 => 2 10","            displayArticles(response, articlesRootUrl);","            return 1726;","        })","        .then(function(response2) {","            x.a = 2;","            console.log(response2); // 1726","        })","        .catch(console.log);","}","","function getArticlesFromApi(articlesRootUrl) {","     var futureResponseFromAPI = $.get(articlesRootUrl);","     return futureResponseFromAPI","     .then(function(j) {","         console.log('1', j.length);  // 1 100","         ","         // return first 30 articles","         var articles = j.slice(0, 30);","         return articles;","     });","     ","     // equivalent with","     // return  $.get(articlesRootUrl).then(...);","}","","function get10Articles(articles) {","    // display only the first 10 articles","    // console.log(response.slice(0, 10));","","    return articles.slice(0, 10);","}","","function displayArticles(articles, articlesRootUrl) {","    ","    // get the template","    var template = document.getElementById(\"template\");","    var articlesContainer = document.getElementById(\"articles\");","    ","    for (var i = 0; i < 10; i++) {","        // console.log(articles[i]);","        // clone the template","        var articleClone = template.cloneNode(true);","        articleClone.id = \"article_\" + articles[i].id;","        ","        // populate the cloned template","        // var articleHeader = articleClone.querySelector(\".article-header\");","        // articleHeader.innerHTML = articles[i].id + \" - \" + articles[i].title;","        ","        var articleId = articleClone.querySelector(\".article-id\");","        articleId.innerHTML = articles[i].id;","        ","        var articleTitle = articleClone.querySelector(\".article-title\");","        articleTitle.innerHTML = articles[i].title;","        ","        var articleBody = articleClone.querySelector(\".article-body\");","        articleBody.innerHTML = articles[i].body;","        ","        getArticleComments(articles[i].id, articleClone, articlesRootUrl);","        ","        var deleteButton = articleClone.querySelector(\".article-delete\");","        deleteButton.addEventListener(\"click\", function(event) {","            console.log('x', articleClone);","            deleteArticle(event, articlesRootUrl);   ","        });","        ","        var editButton = articleClone.querySelector(\".article-edit\");","        editButton.addEventListener(\"click\", function(event) {","            editArticle(event, articlesRootUrl);","        });","        ","        // append the clone to the articles container","        articlesContainer.appendChild(articleClone);","    }","}","","function displayError(jqXHR, textStatus, errorThrown) {","    console.log(jqXHR, textStatus, errorThrown);","    var articlesContainer = document.getElementById(\"articles\");","    articlesContainer.innerHTML = ","    \"We're sorry. The request failed with status \" + jqXHR.status;","}","","","function getArticleComments(articleId, articleClone, articlesRootUrl) {","    console.log(articleClone);","    ","    var articleComments = articleClone.querySelector(\".article-comments\");","    // articleComments.innerHTML = articles[i].;","    // we don't have the article comments yet, we need to get them from the API","    ","    var commentsUrl = articlesRootUrl + \"/\" + articleId + \"/comments\"; ","    $.get(commentsUrl, function(commentsResponse) {","        console.log(commentsResponse);","        var emails = '';","        for (var i = 0;  i < commentsResponse.length; i++) {","            emails += commentsResponse[i].email;","        }","        ","        articleComments.innerHTML = emails;","    });","}","","function deleteArticle(event, articlesRootUrl) {","    console.log('event', event); // article_4","    // console.log(articles[i]);","    ","    var articleId = event.path[2].id.replace(\"article_\", \"\");","","    $.ajax({","        url: articlesRootUrl + \"/\" + articleId,","        method: 'DELETE',","        success: function(response) {","            console.log('response', response);","            event.path[2].remove();","        }","    });","}","","function editArticle(event, articlesRootUrl){","    var articleId = event.path[2].id.replace(\"article_\", \"\");","    var articleBody = event.path[2].querySelector(\".article-body\");","    ","    $.ajax({","        url: articlesRootUrl + \"/\" + articleId,","        method: \"PATCH\",","        dataType: \"json\",","        data: {","            body: \"My body \" + articleId","        },","        success: function(response){","            console.log(response);","            articleBody.innerHTML = response.body;","        }","    })","}"],"id":2},{"start":{"row":0,"column":0},"end":{"row":78,"column":19},"action":"insert","lines":["// define JS Objects","var obj1 = {};","","var obj2 = new Object();","","console.log(obj1);","console.log(obj2);","","var laptop = {","    color: \"green\",","    brand: \"Dell\",","    \"hard.disk.size\": \"1TB\",","    memory: \"3GB\",","    price: 1500,","    start: startLaptop,","    shutDown: function() {","        console.log('shutting down laptop ' + this.brand);","    }","}","","//accessing object properties","var laptopPrice = laptop.price;","var laptopColor = laptop[\"color\"];","var hardDiskSize = laptop[\"hard.disk.size\"];","","console.log(laptop);","console.log(\"Laptop price is : \" + laptopPrice);","console.log(\"Laptop color is : \" + laptopColor);","","// define object methods functions","function startLaptop() {","    console.log(\"Starting laptop now...\");","}","","laptop.start();","laptop.shutDown();","","// class definition","","// constructor function","function User(data) {","    // this is used to avoid getting console error","    // can not call property name of undefined on the first","    // example where we're not sending an object when calling","    // new User()","    data = data || {};","","    this.name = data.name;","    this.age = data.age;","    this.height = null;","    this.weight = null;","}","","// define class methods","User.prototype.calculateBMI = function() {","    var heightInMeters = this.height/100;","    var bmi = this.weight / (heightInMeters * heightInMeters);","    console.log(this.name + \" BMI is: \" + bmi);","    return bmi;","}","","// create object using User class -> instance of User class","var user1 = new User();","user1.name = \"John Doe\";","user1.age = 25;","user1.height = 178;","user1.weight = 88;","user1.calculateBMI();","","var user2 = new User({","    name: \"Anne\",","    age: 44","});","user2.height = 167;","user2.weight = 60;","user2.calculateBMI();","","console.log(user1);","console.log(user2);"]}]]},"ace":{"folds":[],"scrolltop":1210.5,"scrollleft":0,"selection":{"start":{"row":78,"column":19},"end":{"row":78,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1519146340642,"hash":"dcfa0cc963ed935f3b0b86b1c2a70eb43e00dbab"}